<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-4.2.xsd">
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName" value="org.h2.Driver" />

		<property name="url" value="  jdbc:h2:~/test" />

		<property name="username" value="sa" />


		<property name="password" value="" />
	</bean>

	<!--Bean for session factory. That s bean creates session for database. -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="hibernateProperties">

			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>


		</property>

		<property name="packagesToScan">
			<list>
				<value>com.emusicstore.*</value>


			</list>

		</property>

	</bean>



	<!-- Bean to manage database transactions with hibernate. -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />

	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="100000" />
	</bean>


	<security:http auto-config="true">
		<security:intercept-url pattern="/admin/**"
			access="USER" />
	</security:http>


	<security:authentication-manager>
		<security:authentication-provider>

			<security:jdbc-user-service
				data-source-ref="dataSource"
				authorities-by-username-query="SELECT username, authority From authorities WHERE username = ?"
				users-by-username-query="SELECT username, password, enabled FROM users WHERE username = ?" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>